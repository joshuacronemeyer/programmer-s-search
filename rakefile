require 'rubygems'
require 'rake/testtask'
require 'rake/clean'
require 'ftools'
require 'net/http'
require 'cgi'
require 'nokogiri'
require 'ostruct'

CLEAN.include(Rake::FileList["tmp/**"])

COMBINED_KEYWORDS='tmp/combined_keywords.txt'

DELICIOUS_URLS='tmp/delicious_urls.txt'
DELICIOUS_REQUESTS='tmp/delicious_requests.txt'
DELICIOUS_DEPTH=1
PROCESSED_URLS='tmp/processed_urls.txt'

ANNOTATION='tmp/programmer_search_annotation.xml'
ANNOTATION_TEMPLATE="templates/annotations.xml.erb"

CONTEXT='tmp/programmer_search_context.xml'
CONTEXT_TEMPLATE="templates/context.xml.erb"

SEARCH_LABEL="_cse_programmer_search"

desc "Combine all delicious keywords for the searches we are going to perform"
task :combine_keywords do |t|
  queries = []
  input_files = FileList.new("keywords/*.txt") { |l| l.exclude(/blacklist/) }
  input_files.each { |file|queries.concat(IO.readlines(file))}
  File.open(COMBINED_KEYWORDS, 'w'){|f| f.write(queries)}
end

desc "Generate a list of requests to pass on to delicious"
task :generate_delicious_requests => :combine_keywords do |t|
  keywords = IO.readlines(COMBINED_KEYWORDS)
  requests = keywords.map{|keyword| "/search?p=#{CGI::escape(keyword.strip)}\n"}
  File.open(DELICIOUS_REQUESTS, 'w'){|f| f.write(requests)}
end

desc "Run keyword searches on delicious and get back all the URLS"
task :get_delicious_urls => :generate_delicious_requests do |t|
  links = []
  requests = IO.readlines(DELICIOUS_REQUESTS)
  requests.each do |request|
    (1..DELICIOUS_DEPTH).each do |page| 
      body = Nokogiri::HTML(Net::HTTP.get("delicious.com", request.strip.concat("&page=#{page}")))
      xpath_links = body.xpath("//div[@id='content']//a[contains(@class, 'taggedlink')]")
      links.concat(xpath_links.map{|xpath_link| "#{xpath_link["href"]}\n"})
    end
  end
  #todo: implement blacklist filter
  File.open(DELICIOUS_URLS, 'w'){|f| f.write(links)}
end

desc "Process urls to make them ready to use in the google custom search"
task :process_urls => :get_delicious_urls do |t|
  delicious_urls = IO.readlines(DELICIOUS_URLS)
  processed_urls = delicious_urls.map{|delicious_url| "#{delicious_url.strip.sub(/[^\/]*$/, "")}\n"}
  File.open(PROCESSED_URLS, 'w'){|f| f.write(processed_urls)}
end

desc "Generate annotation file which specifies what sites are included in the search"
task :generate_annotation do |t|#=> :get_delicious_urls |t|
  require 'erb'
  template = IO.read(ANNOTATION_TEMPLATE)
  xml_maker = ERB.new(template)
  urls = IO.readlines(DELICIOUS_URLS).map!{|url| url.strip}
  label = SEARCH_LABEL
  File.open(ANNOTATION, 'w'){|f| f.write(xml_maker.result binding)}
end

desc "Generate context file which specifies the search engine"
task :generate_context do |t|
  require 'erb'
  template = IO.read(CONTEXT_TEMPLATE)
  xml_maker = ERB.new(template)
  label = SEARCH_LABEL
  File.open(CONTEXT, 'w'){|f| f.write(xml_maker.result binding)}
end

desc "Create XML's for our google custom search"
task :create_search_xmls => [:generate_context, :generate_annotation] do |t|
end

